{"version":3,"sources":["redux/table/table-action.js","redux/table/table-reducer.js","redux/tableCreation/tableCreation-action.js","redux/tableCreation/tableCreation-reducer.js","redux/store.js","js/createTable.js","components/Button/Button.style.js","components/Button/Button.jsx","components/TableCreationPage/TableCreationPage.style.js","components/TableCreationPage/TableCreationPage.jsx","js/calculatePercentage.js","redux/selectors.js","js/onFocusShowPercentages.js","js/showNearestAmount.js","components/TablePage/TablePage.style.js","components/TablePage/TablePage.jsx","components/App/App.jsx","index.js"],"names":["createTable","createAction","isCreated","changeAmountCells","deleteRow","addRow","createPercentages","showComingNumbers","hideComingNumbers","table","createReducer","tableActions","_","payload","state","map","row","el","id","newElNumber","number","filter","index","newRow","isComingNumbers","tableReducer","combineReducers","createRow","createColumn","createX","m","tableCreationActions","n","x","tableCreationReducer","rootReducer","tableCreation","store","createStore","composeWithDevTools","applyMiddleware","thunk","column","columnArray","i","push","uuidv4","Math","floor","random","tableArray","GlassButton","styled","button","Button","props","text","prop","Form","form","LabelForm","label","InputForm","input","TableCreationPage","dispatch","useDispatch","useState","setRow","setColumn","cells","setCells","handleChange","target","name","value","reset","onSubmit","event","preventDefault","Number","type","onChange","percentsArray","rowArray","createPercent","rows","result","round","reduce","acc","calculatePercentage","columns","percent","res","reverse","getTable","getComingNumbers","getColumn","getCell","getRowAmount","createSelector","sum","getPercent","getRow","onFocusShowPercentages","amount","show","showNearestAmount","cell","indexArray","arrayAmount","flat","difference","differenceSort","sort","a","b","slice","Set","forEach","indexNumber","Container","div","Table","AmountAndPercent","td","TableRow","tr","TableCell","color","TableDel","Percent","span","TablePage","useSelector","rowAmount","columnPercent","comingNumbers","hideNearestAmount","length","tableRow","onClick","addAmount","onMouseEnter","onHoverNearestAmount","onMouseLeave","find","showPercent","onMouseLeaveUnShowPercent","App","isCreatedTable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2c0f4ae.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst createTable = createAction('table/Create');\nconst isCreated = createAction('table/IsCreated');\nconst changeAmountCells = createAction('table/ChangeAmountCells');\nconst deleteRow = createAction('table/DeleteRow');\nconst addRow = createAction('table/AddRow');\nconst createPercentages = createAction('table/CreatePercentages');\nconst showComingNumbers = createAction('table/showComingNumbers');\nconst hideComingNumbers = createAction('table/hideComingNumbers');\n\nexport default {\n  createTable,\n  isCreated,\n  changeAmountCells,\n  deleteRow,\n  addRow,\n  createPercentages,\n  showComingNumbers,\n  hideComingNumbers,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport tableActions from './table-action';\n\nconst changeAmountCells = (state, { payload }) => {\n  return [\n    ...state.map(row =>\n      row.map(el => {\n        if (el.id === payload) {\n          const newElNumber = el.number + 1;\n          return { ...el, number: newElNumber };\n        }\n        return el;\n      }),\n    ),\n  ];\n};\n\nconst deleteRow = (state, { payload }) => {\n  return [...state.filter((row, index) => (index !== payload ? row : null))];\n};\n\nconst createPercentages = (state, { payload: { newRow, index } }) => {\n  return state.map((row, id) => {\n    if (id === index) {\n      return row.map((el, id) => ({ ...el, ...newRow[id] }));\n    }\n    return row;\n  });\n};\n\nconst table = createReducer([], {\n  [tableActions.createTable]: (_, { payload }) => [...payload],\n  [tableActions.changeAmountCells]: changeAmountCells,\n  [tableActions.deleteRow]: deleteRow,\n  [tableActions.addRow]: (state, { payload }) => [...state, payload[0]],\n  [tableActions.createPercentages]: createPercentages,\n});\n\nconst isCreated = createReducer(false, {\n  [tableActions.isCreated]: () => true,\n});\n\nconst isComingNumbers = createReducer([], {\n  [tableActions.showComingNumbers]: (_, { payload }) => [...payload],\n  [tableActions.hideComingNumbers]: () => [],\n});\n\nconst tableReducer = combineReducers({\n  table,\n  isCreated,\n  isComingNumbers,\n});\n\nexport default tableReducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst createRow = createAction('table/CreateRow');\nconst createColumn = createAction('table/CreateColumn');\nconst createX = createAction('table/CreateX');\n\nexport default {\n  createRow,\n  createColumn,\n  createX,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport tableCreationActions from './tableCreation-action';\nimport tableActions from '../table/table-action';\n\nconst m = createReducer(null, {\n  [tableCreationActions.createRow]: (_, { payload }) => payload,\n  [tableActions.deleteRow]: state => state - 1,\n  [tableActions.addRow]: state => state + 1,\n});\n\nconst n = createReducer(null, {\n  [tableCreationActions.createColumn]: (_, { payload }) => payload,\n});\n\nconst x = createReducer(null, {\n  [tableCreationActions.createX]: (_, { payload }) => payload,\n});\n\nconst tableCreationReducer = combineReducers({\n  m,\n  n,\n  x,\n});\n\nexport default tableCreationReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport tableReducer from './table/table-reducer';\nimport tableCreationReducer from './tableCreation/tableCreation-reducer';\n\nconst rootReducer = combineReducers({\n  tableCreation: tableCreationReducer,\n  table: tableReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import { v4 as uuidv4 } from 'uuid';\n\nconst createRandomNumber = () => {\n  return Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n};\n\nconst createColumn = column => {\n  const columnArray = [];\n  for (let i = column; i > 0; i -= 1) {\n    columnArray.push({ id: uuidv4(), number: createRandomNumber() });\n  }\n  return columnArray;\n};\n\nconst createTable = (row, column) => {\n  const tableArray = [];\n  for (let i = row; i > 0; i -= 1) {\n    tableArray.push(createColumn(column));\n  }\n  return tableArray;\n};\n\nexport default createTable;\n","import styled from 'styled-components';\r\n\r\nconst GlassButton = styled.button`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 180px;\r\n  margin: 0 auto;\r\n  color: #777674;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-shadow: rgba(255, 255, 255, 0.5) 1px 1px,\r\n    rgba(100, 100, 100, 0.3) 3px 7px 3px;\r\n  user-select: none;\r\n  padding: 1em 2em;\r\n  outline: none;\r\n  border-radius: 3px / 100%;\r\n  background-image: linear-gradient(\r\n      45deg,\r\n      rgba(255, 255, 255, 0) 30%,\r\n      rgba(255, 255, 255, 0.8),\r\n      rgba(255, 255, 255, 0) 70%\r\n    ),\r\n    linear-gradient(\r\n      to right,\r\n      rgba(255, 255, 255, 1),\r\n      rgba(255, 255, 255, 0) 20%,\r\n      rgba(255, 255, 255, 0) 90%,\r\n      rgba(255, 255, 255, 0.3)\r\n    ),\r\n    linear-gradient(\r\n      to right,\r\n      rgba(125, 125, 125, 1),\r\n      rgba(255, 255, 255, 0.9) 45%,\r\n      rgba(125, 125, 125, 0.5)\r\n    ),\r\n    linear-gradient(\r\n      to right,\r\n      rgba(125, 125, 125, 1),\r\n      rgba(255, 255, 255, 0.9) 45%,\r\n      rgba(125, 125, 125, 0.5)\r\n    ),\r\n    linear-gradient(\r\n      to right,\r\n      rgba(223, 190, 170, 1),\r\n      rgba(255, 255, 255, 0.9) 45%,\r\n      rgba(223, 190, 170, 0.5)\r\n    ),\r\n    linear-gradient(\r\n      to right,\r\n      rgba(223, 190, 170, 1),\r\n      rgba(255, 255, 255, 0.9) 45%,\r\n      rgba(223, 190, 170, 0.5)\r\n    );\r\n  background-repeat: no-repeat;\r\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\r\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\r\n  box-shadow: rgba(0, 0, 0, 0.5) 3px 10px 10px -10px;\r\n  &:hover {\r\n    transition: 0.5s linear;\r\n    background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\r\n  }\r\n  &:active {\r\n    top: 1px;\r\n  }\r\n`;\r\n\r\nexport default GlassButton;","import GlassButton from './Button.style';\r\n\r\nconst Button = (props) => {\r\n    const { text, ...prop } = props;\r\n    return (\r\n        <GlassButton {...prop}>{text}</GlassButton>\r\n    );\r\n};\r\n\r\nexport default Button;","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: #ffe4c4;\n  width: 300px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n  box-shadow: 2px 1px 2px 1px rgba(0, 0, 0, 0.15),\n    0 10px 10px rgba(0, 0, 0, 0.12);\n  @media screen and (min-width: 768px) {\n    width: 380px;\n    padding: 30px 30px;\n  }\n`;\n\nconst LabelForm = styled.label`\n  text-align: center;\n  font-size: 22px;\n  font-weight: bold;\n  color: #e9967a;\n`;\n\nconst InputForm = styled.input`\n  display: block;\n  margin: 20px auto;\n  padding-left: 16px;\n  font-size: 18px;\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport { Form, LabelForm, InputForm };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport createTable from '../../js/createTable';\nimport tableActions from '../../redux/table/table-action';\nimport tableCreationActions from '../../redux/tableCreation/tableCreation-action';\nimport Button from '../Button';\nimport { Form, LabelForm, InputForm } from './TableCreationPage.style';\n\nconst TableCreationPage = () => {\n  const dispatch = useDispatch();\n  const [row, setRow] = useState(0);\n  const [column, setColumn] = useState(0);\n  const [cells, setCells] = useState(0);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'row':\n        setRow(value);\n        break;\n      case 'column':\n        setColumn(value);\n        break;\n      case 'cells':\n        setCells(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const table = createTable(row, column);\n\n    dispatch(tableCreationActions.createRow(Number(row)));\n    dispatch(tableCreationActions.createColumn(Number(column)));\n    dispatch(tableCreationActions.createX(Number(cells)));\n    dispatch(tableActions.createTable(table));\n    dispatch(tableActions.isCreated());\n\n    reset();\n  };\n\n  const reset = () => {\n    setRow(0);\n    setColumn(0);\n    setCells(0);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelForm>\n        {' '}\n        Add row\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"row\"\n          value={row}\n        />\n      </LabelForm>\n      <LabelForm>\n        {' '}\n        Add column\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"column\"\n          value={column}\n        />\n      </LabelForm>\n      <LabelForm>\n        {' '}\n        How many cells \n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"cells\"\n          value={cells}\n        />\n      </LabelForm>\n      <Button type=\"submit\" text='Create table' />\n    </Form>\n  );\n};\n\nexport default TableCreationPage;\n","import { v4 as uuidv4 } from 'uuid';\n\nlet percentsArray = [];\nlet rowArray = [];\n\nconst createPercent = (index, table, row) => {\n  for (let i = row; i > 0; i = i - 1) {\n    const rows = table[i - 1];\n    rowArray.push(rows[index].number);\n  }\n  const result = Math.round(\n    rowArray.reduce((acc, value) => acc + value, 0) / row,\n  );\n  rowArray = [];\n  return result;\n};\n\nconst calculatePercentage = (table, row, column) => {\n  let columns = column;\n  for (let i = column; i > 0; i = i - 1) {\n    columns = columns - 1;\n    const percent = createPercent(columns, table, row);\n    percentsArray.push({ id: uuidv4(), percent });\n  }\n  const res = percentsArray.reverse();\n  percentsArray = [];\n  return res;\n};\n\nexport default calculatePercentage;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport calculatePercentage from '../js/calculatePercentage';\n\nconst isCreated = state => state.table.isCreated;\nconst getTable = state => state.table.table;\nconst getComingNumbers = state => state.table.isComingNumbers;\nconst getRow = state => state.tableCreation.m;\nconst getColumn = state => state.tableCreation.n;\nconst getCell = state => state.tableCreation.x;\n\nconst getRowAmount = createSelector([getTable], table => {\n  return table.reduce((acc, row) => {\n    const sum = row.reduce((acc, value) => acc + value.number, 0);\n    acc.push({ id: uuidv4(), sum });\n    return acc;\n  }, []);\n});\n\nconst getPercent = state => {\n  const row = getRow(state);\n  const table = getTable(state);\n  const column = getColumn(state);\n  return calculatePercentage(table, row, column);\n};\n\nexport { isCreated, getTable, getComingNumbers, getRowAmount, getPercent, getRow, getColumn, getCell };","const onFocusShowPercentages = (index, table, amount, show) => {\n  const showPercent = () => {\n    return table[index].map(el => {\n      const percent = `${Math.round((el.number / amount[index].sum) * 100)}%`;\n      return { ...el, show, percent };\n    });\n  };\n  return showPercent();\n};\n\nexport default onFocusShowPercentages;\n","const showNearestAmount = (table, amount, cell) => {\r\n    const indexArray = [];\r\n    \r\n    const arrayAmount = table.flat();\r\n    const difference = arrayAmount.map(({ number }) => amount >= number ? amount - number : number - amount);\r\n    const differenceSort = [...difference].sort((a, b) => a - b).slice(0, cell + 1);\r\n    const mySet = new Set(differenceSort);\r\n    mySet.forEach(number => difference.forEach((el, id) => number === el && indexArray.push(id)));\r\n    const result = arrayAmount.reduce((acc, el, id) => {\r\n        indexArray.forEach(index => index === id && acc.push({ indexNumber: el.id }));\r\n        return acc;\r\n    }, []);\r\n    \r\n    return result;\r\n};\r\n\r\nexport default showNearestAmount;","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n`;\n\nconst Table = styled.table`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nconst AmountAndPercent = styled.td`\n  background-color: #e9967a;\n  padding: 10px;\n`;\n\nconst TableRow = styled.tr`\n  &:nth-child(even) {\n    background-color: #dcdcdc;\n  }\n`;\n\nconst TableCell = styled.td`\n  position: relative;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: ${props => props.color && '#cd5c5c'};\n  &:hover {\n    background-color: #cd5c5c;\n  }\n`;\n\nconst TableDel = styled.td`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: #b22222;\n`;\n\nconst Percent = styled.span`\n  position: absolute;\n  top: 75%;\n  background-color: #cd5c5c;\n`;\n\nexport {\n  Container,\n  TableRow,\n  TableCell,\n  Table,\n  AmountAndPercent,\n  TableDel,\n  Percent,\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getTable,\n  getRowAmount,\n  getPercent,\n  getColumn,\n  getCell,\n  getComingNumbers,\n} from '../../redux/selectors';\nimport tableActions from '../../redux/table/table-action';\nimport createTable from '../../js/createTable';\nimport onFocusShowPercentages from '../../js/onFocusShowPercentages';\nimport showNearestAmount from '../../js/showNearestAmount';\n\nimport Button from '../Button';\nimport {\n  Container,\n  TableRow,\n  TableCell,\n  Table,\n  AmountAndPercent,\n  TableDel,\n  Percent,\n} from './TablePage.style';\n\nconst TablePage = () => {\n  const dispatch = useDispatch();\n  const table = useSelector(getTable);\n  const rowAmount = useSelector(getRowAmount);\n  const columnPercent = useSelector(getPercent);\n  const column = useSelector(getColumn);\n  const cell = useSelector(getCell);\n  const comingNumbers = useSelector(getComingNumbers);\n\n  const addAmount = id => {\n    dispatch(tableActions.changeAmountCells(id));\n  };\n\n  const deleteRow = id => {\n    dispatch(tableActions.deleteRow(id));\n  };\n\n  const addRow = () => {\n    const newRow = createTable(1, column);\n    dispatch(tableActions.addRow(newRow));\n  };\n\n  const showPercent = index => {\n    const newRow = onFocusShowPercentages(index, table, rowAmount, true);\n    dispatch(tableActions.createPercentages({ newRow, index }));\n  };\n\n  const onMouseLeaveUnShowPercent = index => {\n    const newRow = onFocusShowPercentages(index, table, rowAmount, false);\n    dispatch(tableActions.createPercentages({ newRow, index }));\n  };\n\n  const onHoverNearestAmount = (amount) => {\n    const comingNumbers = showNearestAmount(table, amount, cell);\n    dispatch(tableActions.showComingNumbers(comingNumbers));\n  };\n\n  const hideNearestAmount = () => {\n    dispatch(tableActions.hideComingNumbers());\n  };\n\n  return (\n    <Container>\n      <Table>\n        <tbody>\n          {table.length > 0 &&\n            table.map((tableRow, index) => (\n              <TableRow key={index}>\n                {tableRow.map(({ id, number, percent, show }) => (\n                  <TableCell key={id}\n                    onClick={() => addAmount(id)}\n                    onMouseEnter={() => onHoverNearestAmount(number)}\n                    onMouseLeave={hideNearestAmount}\n                    color={comingNumbers.length && comingNumbers.find(({indexNumber}) => indexNumber === id )}\n                  >\n                    {number}\n                    {show && <Percent>{percent}</Percent>}\n                  </TableCell>\n                ))}\n                <AmountAndPercent\n                  key={rowAmount[index].id}\n                  onMouseEnter={() => showPercent(index)}\n                  onMouseLeave={() => onMouseLeaveUnShowPercent(index)}\n                >\n                  {rowAmount[index].sum}\n                </AmountAndPercent>\n                <TableDel onClick={() => deleteRow(index)}>Del</TableDel>\n              </TableRow>\n            ))}\n          <TableRow>\n            {columnPercent.map(({ id, percent }) => (\n              <AmountAndPercent key={id}>{percent}</AmountAndPercent>\n            ))}\n          </TableRow>\n        </tbody>\n      </Table>\n      <Button onClick={addRow} text='Add Row' />\n    </Container>\n  );\n};\n\nexport default TablePage;\n","import { useSelector } from 'react-redux';\n\nimport TableCreationPage from '../TableCreationPage';\nimport TablePage from '../TablePage';\nimport { isCreated } from '../../redux/selectors';\n\nconst App = () => {\n  const isCreatedTable = useSelector(isCreated);\n  return <>{!isCreatedTable ? <TableCreationPage /> : <TablePage />}</>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\n\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}