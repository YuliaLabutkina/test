{"version":3,"sources":["redux/table/table-action.js","redux/table/table-reducer.js","redux/tableCreation/tableCreation-action.js","redux/tableCreation/tableCreation-reducer.js","redux/store.js","js/createTable.js","components/TableCreationPage/TableCreationPage.style.js","components/TableCreationPage/TableCreationPage.jsx","js/calculatePercentage.js","redux/selectors.js","js/onFocusShowPercentages.js","components/TablePage/TablePage.style.js","components/TablePage/TablePage.jsx","components/App/App.jsx","index.js"],"names":["createTable","createAction","isCreated","changeAmountCells","deleteRow","addRow","createPercentages","table","createReducer","tableActions","_","payload","state","map","row","el","id","newElNumber","number","filter","index","newRow","tableReducer","combineReducers","createRow","createColumn","m","tableCreationActions","n","tableCreationReducer","rootReducer","tableCreation","store","createStore","composeWithDevTools","applyMiddleware","thunk","column","columnArray","i","push","uuidv4","Math","floor","random","tableArray","Form","styled","form","LabelForm","label","InputForm","input","Button","button","TableCreationPage","dispatch","useDispatch","useState","setRow","setColumn","handleChange","target","name","value","reset","onSubmit","event","preventDefault","Number","type","onChange","percentsArray","rowArray","createPercent","rows","result","round","reduce","acc","calculatePercentage","columns","percent","res","reverse","getTable","getColumn","getRowAmount","createSelector","sumArray","sum","getPercent","onFocusShowPercentages","amount","show","Container","div","Table","AmountAndPercent","td","TableRow","tr","TableCell","TableDel","Percent","span","TablePage","useSelector","rowAmount","columnPercent","length","tableRow","onClick","addAmount","onMouseEnter","showPercent","onMouseLeave","onMouseLeaveUnShowPercent","App","isCreatedTable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee5c1304.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst createTable = createAction('table/Create');\nconst isCreated = createAction('table/IsCreated');\nconst changeAmountCells = createAction('table/ChangeAmountCells');\nconst deleteRow = createAction('table/DeleteRow');\nconst addRow = createAction('table/AddRow');\nconst createPercentages = createAction('table/CreatePercentages');\n\nexport default {\n  createTable,\n  isCreated,\n  changeAmountCells,\n  deleteRow,\n  addRow,\n  createPercentages,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport tableActions from './table-action';\n\nconst changeAmountCells = (state, { payload }) => {\n  return [\n    ...state.map(row =>\n      row.map(el => {\n        if (el.id === payload) {\n          const newElNumber = el.number + 1;\n          return { ...el, number: newElNumber };\n        }\n        return el;\n      }),\n    ),\n  ];\n};\n\nconst deleteRow = (state, { payload }) => {\n  return [...state.filter((row, index) => (index !== payload ? row : null))];\n};\n\nconst createPercentages = (state, { payload: { newRow, index } }) => {\n  return state.map((row, id) => {\n    if (id === index) {\n      return row.map((el, id) => ({ ...el, ...newRow[id] }));\n    }\n    return row;\n  });\n};\n\nconst table = createReducer([], {\n  [tableActions.createTable]: (_, { payload }) => [...payload],\n  [tableActions.changeAmountCells]: changeAmountCells,\n  [tableActions.deleteRow]: deleteRow,\n  [tableActions.addRow]: (state, { payload }) => [...state, payload[0]],\n  [tableActions.createPercentages]: createPercentages,\n});\n\nconst isCreated = createReducer(false, {\n  [tableActions.isCreated]: () => true,\n});\n\nconst tableReducer = combineReducers({\n  table,\n  isCreated,\n});\n\nexport default tableReducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst createRow = createAction('table/CreateRow');\nconst createColumn = createAction('table/CreateColumn');\n\nexport default {\n  createRow,\n  createColumn,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport tableCreationActions from './tableCreation-action';\nimport tableActions from '../table/table-action';\n\nconst m = createReducer(null, {\n  [tableCreationActions.createRow]: (_, { payload }) => payload,\n  [tableActions.deleteRow]: state => state - 1,\n  [tableActions.addRow]: state => state + 1,\n});\n\nconst n = createReducer(null, {\n  [tableCreationActions.createColumn]: (_, { payload }) => payload,\n});\n\nconst tableCreationReducer = combineReducers({\n  m,\n  n,\n});\n\nexport default tableCreationReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport tableReducer from './table/table-reducer';\nimport tableCreationReducer from './tableCreation/tableCreation-reducer';\n\nconst rootReducer = combineReducers({\n  tableCreation: tableCreationReducer,\n  table: tableReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import { v4 as uuidv4 } from 'uuid';\n\nconst createRandomNumber = () => {\n  return Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n};\n\nconst createColumn = column => {\n  const columnArray = [];\n  for (let i = column; i > 0; i -= 1) {\n    columnArray.push({ id: uuidv4(), number: createRandomNumber() });\n  }\n  return columnArray;\n};\n\nconst createTable = (row, column) => {\n  const tableArray = [];\n  for (let i = row; i > 0; i -= 1) {\n    tableArray.push(createColumn(column));\n  }\n  return tableArray;\n};\n\nexport default createTable;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: #ffe4c4;\n  width: 300px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n  box-shadow: 2px 1px 2px 1px rgba(0, 0, 0, 0.15),\n    0 10px 10px rgba(0, 0, 0, 0.12);\n  @media screen and (min-width: 768px) {\n    width: 380px;\n    padding: 30px 30px;\n  }\n`;\n\nconst LabelForm = styled.label`\n  text-align: center;\n  font-size: 22px;\n  font-weight: bold;\n  color: #e9967a;\n`;\n\nconst InputForm = styled.input`\n  display: block;\n  margin: 20px auto;\n  padding-left: 16px;\n  font-size: 18px;\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  position: relative;\n  display: inline-block;\n  width: 180px;\n  margin: 0 auto;\n  color: #777674;\n  font-weight: bold;\n  text-decoration: none;\n  text-shadow: rgba(255, 255, 255, 0.5) 1px 1px,\n    rgba(100, 100, 100, 0.3) 3px 7px 3px;\n  user-select: none;\n  padding: 1em 2em;\n  outline: none;\n  border-radius: 3px / 100%;\n  background-image: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0) 70%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1),\n      rgba(255, 255, 255, 0) 20%,\n      rgba(255, 255, 255, 0) 90%,\n      rgba(255, 255, 255, 0.3)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    );\n  background-repeat: no-repeat;\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  box-shadow: rgba(0, 0, 0, 0.5) 3px 10px 10px -10px;\n  &:hover {\n    transition: 0.5s linear;\n    background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  }\n  &:active {\n    top: 1px;\n  }\n`;\n\nexport { Form, LabelForm, InputForm, Button };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport createTable from '../../js/createTable';\nimport tableActions from '../../redux/table/table-action';\nimport tableCreationActions from '../../redux/tableCreation/tableCreation-action';\nimport { Form, LabelForm, InputForm, Button } from './TableCreationPage.style';\n\nconst TableCreationPage = () => {\n  const dispatch = useDispatch();\n  const [row, setRow] = useState(0);\n  const [column, setColumn] = useState(0);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'row':\n        setRow(value);\n        break;\n      case 'column':\n        setColumn(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const table = createTable(row, column);\n\n    dispatch(tableCreationActions.createRow(Number(row)));\n    dispatch(tableCreationActions.createColumn(Number(column)));\n    dispatch(tableActions.createTable(table));\n    dispatch(tableActions.isCreated());\n\n    reset();\n  };\n\n  const reset = () => {\n    setRow(0);\n    setColumn(0);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelForm>\n        {' '}\n        Add row\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"row\"\n          value={row}\n        />\n      </LabelForm>\n      <LabelForm>\n        {' '}\n        Add column\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"column\"\n          value={column}\n        />\n      </LabelForm>\n      <Button type=\"submit\">Create table</Button>\n    </Form>\n  );\n};\n\nexport default TableCreationPage;\n","import { v4 as uuidv4 } from 'uuid';\n\nlet percentsArray = [];\nlet rowArray = [];\n\nconst createPercent = (index, table, row) => {\n  for (let i = row; i > 0; i = i - 1) {\n    const rows = table[i - 1];\n    rowArray.push(rows[index].number);\n  }\n  const result = Math.round(\n    rowArray.reduce((acc, value) => acc + value, 0) / row,\n  );\n  rowArray = [];\n  return result;\n};\n\nconst calculatePercentage = (table, row, column) => {\n  let columns = column;\n  for (let i = column; i > 0; i = i - 1) {\n    columns = columns - 1;\n    const percent = createPercent(columns, table, row);\n    percentsArray.push({ id: uuidv4(), percent });\n  }\n  const res = percentsArray.reverse();\n  percentsArray = [];\n  return res;\n};\n\nexport default calculatePercentage;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport calculatePercentage from '../js/calculatePercentage';\n\nconst isCreated = state => state.table.isCreated;\nconst getTable = state => state.table.table;\nconst getRow = state => state.tableCreation.m;\nconst getColumn = state => state.tableCreation.n;\n\nconst getRowAmount = createSelector([getTable], table => {\n  const sumArray = [];\n  table.map(row => {\n    const sum = row.reduce((acc, value) => acc + value.number, 0);\n    sumArray.push({ id: uuidv4(), sum });\n  });\n  return sumArray;\n});\n\nconst getPercent = state => {\n  const row = state.tableCreation.m;\n  const table = state.table.table;\n  const column = state.tableCreation.n;\n  return calculatePercentage(table, row, column);\n};\n\nexport { isCreated, getTable, getRowAmount, getPercent, getRow, getColumn };\n","const onFocusShowPercentages = (index, table, amount, show) => {\n  const showPercent = () => {\n    return table[index].map(el => {\n      const percent = `${Math.round((el.number / amount[index].sum) * 100)}%`;\n      return { ...el, show, percent };\n    });\n  };\n  return showPercent();\n};\n\nexport default onFocusShowPercentages;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n`;\n\nconst Table = styled.table`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nconst AmountAndPercent = styled.td`\n  background-color: #e9967a;\n  padding: 10px;\n`;\n\nconst TableRow = styled.tr`\n  &:nth-child(even) {\n    background-color: #dcdcdc;\n  }\n`;\n\nconst TableCell = styled.td`\n  position: relative;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  &:hover {\n    background-color: #cd5c5c;\n  }\n`;\n\nconst TableDel = styled.td`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: #b22222;\n`;\n\nconst Percent = styled.span`\n  position: absolute;\n  top: 75%;\n  background-color: #cd5c5c;\n`;\n\nexport {\n  Container,\n  TableRow,\n  TableCell,\n  Table,\n  AmountAndPercent,\n  TableDel,\n  Percent,\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getTable,\n  getRowAmount,\n  getPercent,\n  getColumn,\n} from '../../redux/selectors';\nimport tableActions from '../../redux/table/table-action';\nimport createTable from '../../js/createTable';\nimport onFocusShowPercentages from '../../js/onFocusShowPercentages';\n\nimport {\n  Container,\n  TableRow,\n  TableCell,\n  Table,\n  AmountAndPercent,\n  TableDel,\n  Percent,\n} from './TablePage.style';\nimport { Button } from '../TableCreationPage/TableCreationPage.style';\n\nconst TablePage = () => {\n  const dispatch = useDispatch();\n  const table = useSelector(getTable);\n  const rowAmount = useSelector(getRowAmount);\n  const columnPercent = useSelector(getPercent);\n  const column = useSelector(getColumn);\n\n  const addAmount = id => {\n    dispatch(tableActions.changeAmountCells(id));\n  };\n\n  const deleteRow = id => {\n    dispatch(tableActions.deleteRow(id));\n  };\n\n  const addRow = () => {\n    const newRow = createTable(1, column);\n    dispatch(tableActions.addRow(newRow));\n  };\n\n  const showPercent = index => {\n    const newRow = onFocusShowPercentages(index, table, rowAmount, true);\n    dispatch(tableActions.createPercentages({ newRow, index }));\n  };\n\n  const onMouseLeaveUnShowPercent = index => {\n    const newRow = onFocusShowPercentages(index, table, rowAmount, false);\n    dispatch(tableActions.createPercentages({ newRow, index }));\n  };\n\n  return (\n    <Container>\n      <Table>\n        <tbody>\n          {table.length > 0 &&\n            table.map((tableRow, index) => (\n              <TableRow key={index}>\n                {tableRow.map(({ id, number, percent, show }) => (\n                  <TableCell key={id} onClick={() => addAmount(id)}>\n                    {number}\n                    {show && <Percent>{percent}</Percent>}\n                  </TableCell>\n                ))}\n                <AmountAndPercent\n                  key={rowAmount[index].id}\n                  onMouseEnter={() => showPercent(index)}\n                  onMouseLeave={() => onMouseLeaveUnShowPercent(index)}\n                >\n                  {rowAmount[index].sum}\n                </AmountAndPercent>\n                <TableDel onClick={() => deleteRow(index)}>Del</TableDel>\n              </TableRow>\n            ))}\n          <TableRow>\n            {columnPercent.map(({ id, percent }) => (\n              <AmountAndPercent key={id}>{percent}</AmountAndPercent>\n            ))}\n          </TableRow>\n        </tbody>\n      </Table>\n      <Button onClick={addRow}>Add Row</Button>\n    </Container>\n  );\n};\n\nexport default TablePage;\n","import { useSelector } from 'react-redux';\n\nimport TableCreationPage from '../TableCreationPage';\nimport TablePage from '../TablePage';\nimport { isCreated } from '../../redux/selectors';\n\nconst App = () => {\n  const isCreatedTable = useSelector(isCreated);\n  return <>{!isCreatedTable ? <TableCreationPage /> : <TablePage />}</>;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\n\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}