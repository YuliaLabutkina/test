{"version":3,"sources":["redux/table/table-action.js","redux/table/table-reducer.js","redux/tableCreation/tableCreation-action.js","redux/tableCreation/tableCreation-reducer.js","redux/store.js","js/createTable.js","components/Button/Button.style.js","components/Button/Button.jsx","components/TableCreation/TableCreation.style.js","components/TableCreation/TableCreation.jsx","js/calculateAverage.js","js/calculationPercentages.js","js/calculationsNearestAmounts.js","redux/selectors.js","components/Table/Table.style.js","components/Table/Table.jsx","components/App/App.jsx","index.js"],"names":["createTable","createAction","isCreated","changeAmountCells","deleteRow","addRow","addIndexSelectedRow","deleteIndexSelectedRow","showNumber","hideNumber","dataTable","createReducer","tableActions","_","payload","state","map","row","el","id","newElNumber","number","filter","index","indexCellRowAmount","tableReducer","combineReducers","createRow","createColumn","createX","m","tableCreationActions","n","x","tableCreationReducer","rootReducer","tableCreation","table","store","createStore","composeWithDevTools","applyMiddleware","thunk","column","columnArray","i","push","uuidv4","Math","floor","random","tableArray","GlassButton","styled","button","Button","props","text","prop","Form","form","LabelForm","label","InputForm","input","TableCreation","dispatch","useDispatch","useState","setRow","setColumn","cells","setCells","handleChange","target","name","value","reset","onSubmit","event","preventDefault","Number","type","onChange","averageArray","rowArray","createAverage","rows","result","round","reduce","acc","calculateAverage","columns","average","res","reverse","calculationPercentages","amount","idAmount","percent","sum","calculationsNearestAmounts","cell","indexArray","arrayAmount","flat","difference","differenceSort","sort","a","b","slice","Set","forEach","indexNumber","getTable","getColumn","getAverage","getRow","getRowAmount","createSelector","getPercent","getComingNumbers","Container","div","NumberTable","AmountAndPercent","td","TableRow","tr","TableCell","color","TableDel","Percent","span","Table","useSelector","rowAmount","comingNumbers","indexRowAmount","hideNearestAmount","length","tableRow","idRow","onClick","addAmount","onMouseEnter","onMouseLeave","find","indexPercent","showPercent","onMouseLeaveUnShowPercent","newRow","App","isCreatedTable","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a3cce2e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst createTable = createAction('table/Create');\nconst isCreated = createAction('table/IsCreated');\nconst changeAmountCells = createAction('table/ChangeAmountCells');\nconst deleteRow = createAction('table/DeleteRow');\nconst addRow = createAction('table/AddRow');\nconst addIndexSelectedRow = createAction('table/AddIndexSelectedRow');\nconst deleteIndexSelectedRow = createAction('table/DeleteIndexSelectedRow');\nconst showNumber = createAction('table/ShowNumber');\nconst hideNumber = createAction('table/HideNumber');\n\nexport default {\n  createTable,\n  isCreated,\n  changeAmountCells,\n  deleteRow,\n  addRow,\n  addIndexSelectedRow,\n  deleteIndexSelectedRow,\n  showNumber,\n  hideNumber,\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport tableActions from './table-action';\n\nconst changeAmountCells = (state, { payload }) => {\n  return [\n    ...state.map(row =>\n      row.map(el => {\n        if (el.id === payload) {\n          const newElNumber = el.number + 1;\n          return { ...el, number: newElNumber };\n        }\n        return el;\n      }),\n    ),\n  ];\n};\n\nconst deleteRow = (state, { payload }) => {\n  return [...state.filter((row, index) => (index !== payload ? row : null))];\n};\n\nconst dataTable = createReducer([], {\n  [tableActions.createTable]: (_, { payload }) => [...payload],\n  [tableActions.changeAmountCells]: changeAmountCells,\n  [tableActions.deleteRow]: deleteRow,\n  [tableActions.addRow]: (state, { payload }) => [...state, payload[0]],\n});\n\nconst isCreated = createReducer(false, {\n  [tableActions.isCreated]: () => true,\n});\n\nconst number = createReducer(null, {\n  [tableActions.showNumber]: (_, { payload }) => payload,\n  [tableActions.hideNumber]: () => null,\n});\n\nconst indexCellRowAmount = createReducer(null, {\n  [tableActions.addIndexSelectedRow]: (_, { payload }) => payload,\n  [tableActions.deleteIndexSelectedRow]: () => null,\n});\n\nconst tableReducer = combineReducers({\n  dataTable,\n  isCreated,\n  number,\n  indexCellRowAmount,\n});\n\nexport default tableReducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst createRow = createAction('table/CreateRow');\nconst createColumn = createAction('table/CreateColumn');\nconst createX = createAction('table/CreateX');\n\nexport default {\n  createRow,\n  createColumn,\n  createX,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport tableCreationActions from './tableCreation-action';\nimport tableActions from '../table/table-action';\n\nconst m = createReducer(null, {\n  [tableCreationActions.createRow]: (_, { payload }) => payload,\n  [tableActions.deleteRow]: state => state - 1,\n  [tableActions.addRow]: state => state + 1,\n});\n\nconst n = createReducer(null, {\n  [tableCreationActions.createColumn]: (_, { payload }) => payload,\n});\n\nconst x = createReducer(null, {\n  [tableCreationActions.createX]: (_, { payload }) => payload,\n});\n\nconst tableCreationReducer = combineReducers({\n  m,\n  n,\n  x,\n});\n\nexport default tableCreationReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport tableReducer from './table/table-reducer';\nimport tableCreationReducer from './tableCreation/tableCreation-reducer';\n\nconst rootReducer = combineReducers({\n  tableCreation: tableCreationReducer,\n  table: tableReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import { v4 as uuidv4 } from 'uuid';\n\nconst createRandomNumber = () => {\n  return Math.floor(Math.random() * (999 - 100 + 1)) + 100;\n};\n\nconst createColumn = column => {\n  const columnArray = [];\n  for (let i = column; i > 0; i -= 1) {\n    columnArray.push({ id: uuidv4(), number: createRandomNumber() });\n  }\n  return columnArray;\n};\n\nconst createTable = (row, column) => {\n  const tableArray = [];\n  for (let i = row; i > 0; i -= 1) {\n    tableArray.push(createColumn(column));\n  }\n  return tableArray;\n};\n\nexport default createTable;\n","import styled from 'styled-components';\n\nconst GlassButton = styled.button`\n  position: relative;\n  display: inline-block;\n  width: 180px;\n  margin: 0 auto;\n  color: #777674;\n  font-weight: bold;\n  text-decoration: none;\n  text-shadow: rgba(255, 255, 255, 0.5) 1px 1px,\n    rgba(100, 100, 100, 0.3) 3px 7px 3px;\n  user-select: none;\n  padding: 1em 2em;\n  outline: none;\n  border-radius: 3px / 100%;\n  background-image: linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0) 30%,\n      rgba(255, 255, 255, 0.8),\n      rgba(255, 255, 255, 0) 70%\n    ),\n    linear-gradient(\n      to right,\n      rgba(255, 255, 255, 1),\n      rgba(255, 255, 255, 0) 20%,\n      rgba(255, 255, 255, 0) 90%,\n      rgba(255, 255, 255, 0.3)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(125, 125, 125, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(125, 125, 125, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    ),\n    linear-gradient(\n      to right,\n      rgba(223, 190, 170, 1),\n      rgba(255, 255, 255, 0.9) 45%,\n      rgba(223, 190, 170, 0.5)\n    );\n  background-repeat: no-repeat;\n  background-size: 200% 100%, auto, 100% 2px, 100% 2px, 100% 1px, 100% 1px;\n  background-position: 200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  box-shadow: rgba(0, 0, 0, 0.5) 3px 10px 10px -10px;\n  &:hover {\n    transition: 0.5s linear;\n    background-position: -200% 0, 0 0, 0 0, 0 100%, 0 4px, 0 calc(100% - 4px);\n  }\n  &:active {\n    top: 1px;\n  }\n`;\n\nexport default GlassButton;\n","import GlassButton from './Button.style';\n\nconst Button = props => {\n  const { text, ...prop } = props;\n  return <GlassButton {...prop}>{text}</GlassButton>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  background-color: #ffe4c4;\n  width: 300px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n  box-shadow: 2px 1px 2px 1px rgba(0, 0, 0, 0.15),\n    0 10px 10px rgba(0, 0, 0, 0.12);\n  @media screen and (min-width: 768px) {\n    width: 380px;\n    padding: 30px 30px;\n  }\n`;\n\nconst LabelForm = styled.label`\n  text-align: center;\n  font-size: 22px;\n  font-weight: bold;\n  color: #e9967a;\n`;\n\nconst InputForm = styled.input`\n  display: block;\n  margin: 20px auto;\n  padding-left: 16px;\n  font-size: 18px;\n  &::placeholder {\n    padding-left: 10px;\n    font-size: 16px;\n  }\n`;\n\nexport { Form, LabelForm, InputForm };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport createTable from '../../js/createTable';\nimport tableActions from '../../redux/table/table-action';\nimport tableCreationActions from '../../redux/tableCreation/tableCreation-action';\nimport Button from '../Button';\n\nimport { Form, LabelForm, InputForm } from './TableCreation.style';\n\nconst TableCreation = () => {\n  const dispatch = useDispatch();\n  const [row, setRow] = useState(0);\n  const [column, setColumn] = useState(0);\n  const [cells, setCells] = useState(0);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'row':\n        setRow(value);\n        break;\n      case 'column':\n        setColumn(value);\n        break;\n      case 'cells':\n        setCells(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const table = createTable(row, column);\n\n    dispatch(tableCreationActions.createRow(Number(row)));\n    dispatch(tableCreationActions.createColumn(Number(column)));\n    dispatch(tableCreationActions.createX(Number(cells)));\n    dispatch(tableActions.createTable(table));\n    dispatch(tableActions.isCreated());\n\n    reset();\n  };\n\n  const reset = () => {\n    setRow(0);\n    setColumn(0);\n    setCells(0);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelForm>\n        {' '}\n        Add row\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"row\"\n          value={row}\n        />\n      </LabelForm>\n      <LabelForm>\n        {' '}\n        Add column\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"column\"\n          value={column}\n        />\n      </LabelForm>\n      <LabelForm>\n        {' '}\n        How many cells\n        <InputForm\n          type=\"number\"\n          onChange={handleChange}\n          name=\"cells\"\n          value={cells}\n        />\n      </LabelForm>\n        <Button type=\"submit\" text=\"Create table\" />\n    </Form>\n  );\n};\n\nexport default TableCreation;\n","import { v4 as uuidv4 } from 'uuid';\n\nlet averageArray = [];\nlet rowArray = [];\n\nconst createAverage = (index, table, row) => {\n  for (let i = row; i > 0; i = i - 1) {\n    const rows = table[i - 1];\n    rowArray.push(rows[index].number);\n  }\n  const result = Math.round(\n    rowArray.reduce((acc, value) => acc + value, 0) / row,\n  );\n  rowArray = [];\n  return result;\n};\n\nconst calculateAverage = (table, row, column) => {\n  let columns = column;\n  for (let i = column; i > 0; i = i - 1) {\n    columns = columns - 1;\n    const average = createAverage(columns, table, row);\n    averageArray.push({ id: uuidv4(), average });\n  }\n  const res = averageArray.reverse();\n  averageArray = [];\n  return res;\n};\n\nexport default calculateAverage;\n","const calculationPercentages = ( table, amount) => {\n  const showPercent = (row, idAmount) => {\n    return row.map(el => {\n      const percent = `${Math.round((el.number / amount[idAmount].sum) * 100)}%`;\n      return { percent };\n    });\n  };\n  return table.map((el, id)=> showPercent(el, id));\n};\n\nexport default calculationPercentages;\n","const calculationsNearestAmounts = (table, amount, cell) => {\n  if (!amount) return;\n  const indexArray = [];\n\n  const arrayAmount = table.flat();\n  const difference = arrayAmount.map(({ number }) =>\n    amount >= number ? amount - number : number - amount,\n  );\n  const differenceSort = [...difference]\n    .sort((a, b) => a - b)\n    .slice(0, cell + 1);\n  const mySet = new Set(differenceSort);\n  mySet.forEach(number =>\n    difference.forEach((el, id) => number === el && indexArray.push(id)),\n  );\n  const result = arrayAmount.reduce((acc, el, id) => {\n    indexArray.forEach(\n      index => index === id && acc.push({ indexNumber: el.id }),\n    );\n    return acc;\n  }, []);\n\n  return result;\n};\n\nexport default calculationsNearestAmounts;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createSelector } from '@reduxjs/toolkit';\n\nimport calculateAverage from '../js/calculateAverage';\nimport calculationPercentages from '../js/calculationPercentages';\nimport calculationsNearestAmounts from '../js/calculationsNearestAmounts';\n\nconst isCreated = state => state.table.isCreated;\nconst getTable = state => state.table.dataTable;\nconst indexCellRowAmount = state => state.table.indexCellRowAmount;\nconst inCellNumber = state => state.table.number\nconst getRow = state => state.tableCreation.m;\nconst getColumn = state => state.tableCreation.n;\nconst getCell = state => state.tableCreation.x;\n\nconst getAverage = state => {\n  const row = getRow(state);\n  const table = getTable(state);\n  const column = getColumn(state);\n  return calculateAverage(table, row, column);\n};\n\nconst getRowAmount = createSelector([getTable], dataTable => {\n  return dataTable.reduce((acc, row) => {\n    const sum = row.reduce((acc, value) => acc + value.number, 0);\n    acc.push({ id: uuidv4(), sum });\n    return acc;\n  }, []);\n});\n\nconst getPercent = createSelector([getTable, getRowAmount], (table, amount) => {\n  return calculationPercentages(table, amount);\n});\n\nconst getComingNumbers = createSelector([getTable, inCellNumber, getCell], (table, number, cell) => {\n  return calculationsNearestAmounts(table, number, cell);\n});\n\nexport {\n  isCreated,\n  getTable,\n  indexCellRowAmount,\n  getAverage,\n  inCellNumber,\n  getRow,\n  getColumn,\n  getCell,\n  getRowAmount,\n  getPercent,\n  getComingNumbers,\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px 10px;\n`;\n\nconst NumberTable = styled.table`\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 16px;\n`;\n\nconst AmountAndPercent = styled.td`\n  background-color: #e9967a;\n  padding: 10px;\n`;\n\nconst TableRow = styled.tr`\n  &:nth-child(even) {\n    background-color: #dcdcdc;\n  }\n`;\n\nconst TableCell = styled.td`\n  position: relative;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: ${props => props.color && '#cd5c5c'};\n  &:hover {\n    background-color: #cd5c5c;\n  }\n`;\n\nconst TableDel = styled.td`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  background-color: #b22222;\n`;\n\nconst Percent = styled.span`\n  position: absolute;\n  top: 75%;\n  background-color: #cd5c5c;\n`;\n\nexport {\n  Container,\n  TableRow,\n  TableCell,\n  NumberTable,\n  AmountAndPercent,\n  TableDel,\n  Percent,\n};\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  getTable,\n  getRowAmount,\n  getAverage,\n  getColumn,\n  getComingNumbers,\n  getPercent,\n  indexCellRowAmount,\n} from '../../redux/selectors';\nimport tableActions from '../../redux/table/table-action';\nimport createTable from '../../js/createTable';\n\nimport Button from '../Button';\nimport {\n  Container,\n  TableRow,\n  TableCell,\n  NumberTable,\n  AmountAndPercent,\n  TableDel,\n  Percent,\n} from './Table.style';\n\nconst Table = () => {\n  const dispatch = useDispatch();\n  const table = useSelector(getTable);\n  const rowAmount = useSelector(getRowAmount);\n  const average = useSelector(getAverage);\n  const column = useSelector(getColumn);\n  const comingNumbers = useSelector(getComingNumbers);\n  const percent = useSelector(getPercent);\n  const indexRowAmount = useSelector(indexCellRowAmount);\n\n  const addAmount = id => {\n    dispatch(tableActions.changeAmountCells(id));\n  };\n\n  const deleteRow = id => {\n    dispatch(tableActions.deleteRow(id));\n  };\n\n  const addRow = () => {\n    const newRow = createTable(1, column);\n    dispatch(tableActions.addRow(newRow));\n  };\n\n  const showPercent = index => {\n    dispatch(tableActions.addIndexSelectedRow(Number(index)));\n  };\n\n  const onMouseLeaveUnShowPercent = index => {\n    dispatch(tableActions.deleteIndexSelectedRow(Number(index)));\n  };\n\n  const onHoverNearestAmount = amount => {\n    dispatch(tableActions.showNumber(amount));\n  };\n\n  const hideNearestAmount = () => {\n    dispatch(tableActions.hideNumber());\n  };\n\n  return (\n    <Container>\n      <NumberTable>\n        <tbody>\n          {table.length > 0 &&\n            table.map((tableRow, index) => (\n              <TableRow key={index}>\n                {tableRow.map(({ id, number }, idRow) => (\n                  <TableCell\n                    key={id}\n                    onClick={() => addAmount(id)}\n                    onMouseEnter={() => onHoverNearestAmount(number)}\n                    onMouseLeave={hideNearestAmount}\n                    color={\n                      comingNumbers?.length &&\n                      comingNumbers.find(\n                        ({ indexNumber }) => indexNumber === id,\n                      )\n                    }\n                  >\n                    {number}\n                    {indexRowAmount === index && <Percent>{percent[index].find((el, indexPercent) => indexPercent === idRow).percent}</Percent>}\n                  </TableCell>\n                ))}\n                <AmountAndPercent\n                  key={rowAmount[index].id}\n                  onMouseEnter={() => showPercent(index)}\n                  onMouseLeave={() => onMouseLeaveUnShowPercent(index)}\n                >\n                  {rowAmount[index].sum}\n                </AmountAndPercent>\n                <TableDel onClick={() => deleteRow(index)}>Del</TableDel>\n              </TableRow>\n            ))}\n          <TableRow>\n            {average.map(({ id, average }) => (\n              <AmountAndPercent key={id}>{average}</AmountAndPercent>\n            ))}\n          </TableRow>\n        </tbody>\n      </NumberTable>\n      <Button onClick={addRow} text=\"Add Row\" />\n    </Container>\n  );\n};\n\nexport default Table;\n","import { useSelector } from 'react-redux';\n\nimport TableCreation from '../TableCreation';\nimport Table from '../Table';\nimport { isCreated } from '../../redux/selectors';\n\nconst App = () => {\n  const isCreatedTable = useSelector(isCreated);\n  return <>{!isCreatedTable ? <TableCreation /> : <Table />}</>\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\n\nimport store from './redux/store';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}